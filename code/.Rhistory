unemp_bens$amount = removeWords(unemp_bens$amount, stopwords3)
unemp_bens = unemp_bens %>% separate(amount, into = c("individual", "w_dependents"), sep = "  ") %>% mutate(individual = extract_numeric(individual), w_dependents = extract_numeric(w_dependents))
unemp_bens$w_dependents = ifelse(is.na(unemp_bens$w_dependents), unemp_bens$individual, unemp_bens$w_dependents)
unemp_bens = unemp_bens %>% mutate(average_bens = (as.numeric(individual)*as.numeric(w_dependents))/2) %>% mutate(benefits_possible = average_bens*weeks)
View(unemp_bens)
unemp_bens = read_xlsx("../data/raw/unemployment bens.xlsx")
stopwords3 = c("Individual", "w/dependents", "up", "to")
unemp_bens$amount = removeWords(unemp_bens$amount, stopwords3)
unemp_bens = unemp_bens %>% separate(amount, into = c("individual", "w_dependents"), sep = "  ") %>% mutate(individual = extract_numeric(individual), w_dependents = extract_numeric(w_dependents))
unemp_bens$w_dependents = ifelse(is.na(unemp_bens$w_dependents), unemp_bens$individual, unemp_bens$w_dependents)
unemp_bens = unemp_bens %>% mutate(average_bens = (as.numeric(individual)+as.numeric(w_dependents))/2) %>% mutate(benefits_possible = average_bens*weeks)
View(unemp_bens)
merge7 = merge6 %>% inner_join(unemp_bens, by = "state")
View(merge7)
unemp_bens = read_xlsx("../data/raw/unemployment bens.xlsx")
stopwords3 = c("Individual", "w/dependents", "up", "to")
unemp_bens$amount = removeWords(unemp_bens$amount, stopwords3)
unemp_bens = unemp_bens %>% separate(amount, into = c("individual", "w_dependents"), sep = "  ") %>% mutate(individual = extract_numeric(individual), w_dependents = extract_numeric(w_dependents))
unemp_bens$w_dependents = ifelse(is.na(unemp_bens$w_dependents), unemp_bens$individual, unemp_bens$w_dependents)
unemp_bens = unemp_bens %>% mutate(average_bens = (as.numeric(individual)+as.numeric(w_dependents))/2) %>% mutate(benefits_possible = average_bens*weeks)
merge7 = merge6 %>% inner_join(unemp_bens, by = "states")
merge7 = merge6 %>% inner_join(unemp_bens, by = "state")
View(merge7)
unemp_bens = read_xlsx("../data/raw/unemployment bens.xlsx")
stopwords3 = c("Individual", "w/dependents", "up", "to")
unemp_bens$amount = removeWords(unemp_bens$amount, stopwords3)
unemp_bens = unemp_bens %>% separate(amount, into = c("individual", "w_dependents"), sep = "  ") %>% mutate(individual = extract_numeric(individual), w_dependents = extract_numeric(w_dependents))
unemp_bens$w_dependents = ifelse(is.na(unemp_bens$w_dependents), unemp_bens$individual, unemp_bens$w_dependents)
unemp_bens = unemp_bens %>% mutate(average_bens = (as.numeric(individual)+as.numeric(w_dependents))/2) %>% mutate(benefits_possible = average_bens*weeks) %>% select(state, benefits_possible)
merge7 = merge6 %>% inner_join(unemp_bens, by = "state")
View(merge7)
(16/4)^3
(16/4)^2
16^2
/4
256/4
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(lubridate)
library(tidyverse)
library(ggplot2)
library(readr)
library(tidycensus)
library(rpart)
library(rpart.plot)
library(ipred)
library(readxl)
library(usdata)
library(tm)
library(stringr)
unemp_bens = read_xlsx("../data/raw/unemployment bens.xlsx")
stopwords3 = c("Individual", "w/dependents", "up", "to")
unemp_bens$amount = removeWords(unemp_bens$amount, stopwords3)
unemp_bens = unemp_bens %>% separate(amount, into = c("individual", "w_dependents"), sep = "  ") %>% mutate(individual = extract_numeric(individual), w_dependents = extract_numeric(w_dependents))
unemp_bens$w_dependents = ifelse(is.na(unemp_bens$w_dependents), unemp_bens$individual, unemp_bens$w_dependents)
unemp_bens = unemp_bens %>% mutate(average_bens = (as.numeric(individual)+as.numeric(w_dependents))/2) %>% mutate(unemp_bens_possible = average_bens*weeks) %>% select(state, unemp_bens_possible)
View(unemp_bens)
1 - [(1/1)^3]/3
1 - ((1/1)^3)/3
8 - ((8/4)^3)/3
(1/4)^3/3
((1/4)^3/3)+1
(((1/4)^3/3)+1)*191
1-((1/4)^3/3)
191/192
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(lubridate)
library(tidyverse)
library(ggplot2)
library(readr)
library(tidycensus)
library(rpart)
library(rpart.plot)
library(ipred)
library(readxl)
library(usdata)
library(tm)
library(stringr)
var <- load_variables(2019, "acs1", cache = TRUE)
census_data <- get_acs(geography = "county", variables = c(med_age = "B01002_001",
permale = "B01001_002",
bachplus = "B16010_041",
totalpop = "B01003_001",
unemployed = "B27011_008",
employed =	"B27011_003",
foodstamp = "B09010_002",
ilefnhi= "B27011_007",
ilufnhi= "B27011_012",
nilfnhi = "B27011_017",
gini = "B19083_001",
med_income = "B19013_001",
med_2bed = "B25031_004",
single_mom = "B11012_010",
lessthan_hs = "B16010_002",
housing_units = "B25001_001"),
year = 2019)
census_step = census_data %>%
pivot_wider(id_cols = c(NAME), names_from = variable, values_from = estimate) %>%
separate(NAME, into = c("county", "state"), sep = ", ") %>% arrange(state, county)
census_wider = census_step %>%
mutate(permale = permale/totalpop,
bachplus = bachplus/totalpop, unemployed_rate = unemployed/(employed+unemployed), employed_rate = employed/(employed+unemployed),
foodstamp = foodstamp/totalpop, no_health_ins =
(ilefnhi+ilufnhi+nilfnhi)/totalpop, single_mom =
single_mom/totalpop, lessthan_hs = lessthan_hs/totalpop) %>%
select(-ilefnhi,-ilufnhi,-nilfnhi, -unemployed, -employed)
ACS_vars = drop_na(census_wider)
election = read_csv("../data/raw/president_county_candidate.csv",
col_types = cols(won = col_skip()))
election2 = election %>% arrange(state, county) %>%
group_by(state, county) %>%
mutate(pctvote = 100*total_votes/sum(total_votes)) %>%
filter(candidate %in% c("Joe Biden", "Donald Trump"))
election_clean = election2 %>%
pivot_wider(id_cols = c(state, county),
names_from = candidate, values_from = pctvote)
ACS_election = election_clean %>% inner_join(ACS_vars, by = c("state", "county")) %>% select(-`Joe Biden`) %>% rename(pertrump = 'Donald Trump') %>% mutate(pertrump = pertrump/100)
keyfile = read_csv("../data/raw/ZIP-COUNTY-FIPS_2017-06.csv") %>%
mutate(state_full = abbr2state(STATE),) %>% rename(county = COUNTYNAME, state = state_full, fips = STCOUNTYFP) %>% select(-ZIP) %>% distinct()
ACS_election_key = ACS_election %>% inner_join(keyfile, by = c("state", "county")) %>%  mutate(fips = as.numeric(fips))
land = read_xlsx("../data/raw/land.xlsx") %>% rename(fips = STCOU, area = LND010190D) %>% mutate(fips = as.numeric(fips))
ACS_election_land = ACS_election_key %>% inner_join(land, by = "fips") %>% mutate(pop_density = totalpop/area, housing_density = housing_units/area) %>% select(-area, -housing_units)
poverty = read_xlsx("../data/raw/poverty.xlsx", skip = 1) %>% mutate(pct_all_in_pov = as.numeric(`Poverty Percent, All Ages`)/100, .keep = "unused")
poverty$fips = as.numeric(paste(poverty$`State FIPS Code`, poverty$`County FIPS Code`, sep = ""))
merge1 = ACS_election_land %>% inner_join(poverty, by = "fips") %>%
select(-STATE, -CLASSFP, -Areaname, -`State FIPS Code`, -`County FIPS Code`)
file = "../data/raw/scorecard.csv"
scorecard_raw = read_csv(file)
scorecard_raw = scorecard_raw %>% select("fips_state_code", "fips_county_code",
"calc_police_violence_score","calc_police_accountability_score",
"calc_approach_to_policing_score","calc_police_funding_score")
scorecard_raw = data.frame(sapply(scorecard_raw, function(x) as.numeric(gsub("%", "", x)))) %>%
rename(police_violence_score = calc_police_violence_score,
police_accountability_score=calc_police_accountability_score,
approach_to_policing_score = calc_approach_to_policing_score,
police_funding_score = calc_police_funding_score) %>%
mutate(fips_state_code=as.character(fips_state_code), fips_county_code = as.character(fips_county_code))
scorecard_raw$fips_county_code = str_pad(scorecard_raw$fips_county_code, 3, pad = "0")
scorecard_raw$fips = str_c(scorecard_raw$fips_state_code, scorecard_raw$fips_county_code)
scorecard_clean = scorecard_raw %>% select(-fips_state_code,-fips_county_code) %>%
mutate(fips = as.numeric(fips)) %>% group_by(fips) %>%
summarise(police_violence_score = mean(police_violence_score),
police_accountability_score = mean(police_accountability_score),
approach_to_policing_score = mean(approach_to_policing_score),
police_funding_score = mean(police_funding_score))
merge2 = merge1 %>% inner_join(scorecard_clean, by = "fips")
hha_raw = read_excel('../data/raw/HHS_OCDO_TDWG_COVID-19_Community_Vulnerability_Crosswalk.xlsx') %>% as_tibble()
mean_data = hha_raw %>% select(`County FIPS`,`HHA Score`) %>%
rename(fips = `County FIPS`, hha_score = `HHA Score`) %>%
mutate(fips=as.numeric(fips))%>%
group_by(fips) %>%
summarise(mean_hha_score = mean(hha_score))%>%
as_tibble()
merge3 = merge2 %>% inner_join(mean_data, by = "fips")
file = "../data/raw/Social_Vulnerability_Index_2018.csv"
vulner_raw = read_csv(file)
vulner_raw = vulner_raw %>% select("FIPS","RPL_THEMES")%>% filter(RPL_THEMES>=0)%>%
rename(fips = FIPS, svi_overall=RPL_THEMES)
vulner_raw$fips = as.numeric(vulner_raw$fips)
merge4 = merge3 %>% inner_join(vulner_raw, by = "fips")
state_expenses = read_xlsx("../data/raw/expenditures.xlsx") %>% rename(state = State, spend_per_capita = `State and Local Direct General Expenditures, Per Capita`)
merge6 = merge4 %>% inner_join(state_expenses, by = "state")
unemp_bens = read_xlsx("../data/raw/unemployment bens.xlsx")
stopwords3 = c("Individual", "w/dependents", "up", "to")
unemp_bens$amount = removeWords(unemp_bens$amount, stopwords3)
unemp_bens = unemp_bens %>% separate(amount, into = c("individual", "w_dependents"), sep = "  ") %>% mutate(individual = extract_numeric(individual), w_dependents = extract_numeric(w_dependents))
unemp_bens$w_dependents = ifelse(is.na(unemp_bens$w_dependents), unemp_bens$individual, unemp_bens$w_dependents)
unemp_bens = unemp_bens %>% mutate(average_bens = (as.numeric(individual)+as.numeric(w_dependents))/2) %>% mutate(unemp_bens_possible = average_bens*weeks) %>% select(state, unemp_bens_possible)
merge7 = merge6 %>% inner_join(unemp_bens, by = "state")
census_data_zip <- get_acs(geography = "zcta", variables = c(totalpop = "B01003_001"),
year = 2018)
census_step_zip = census_data_zip %>%
pivot_wider(id_cols = c(NAME), names_from = variable, values_from = estimate) %>%
separate(NAME, into = c("zcta", "zip"), sep = " ") %>% select(-zcta) %>% mutate(zip = as.numeric(zip))
file = "../data/raw/irstiny.csv"
irs_raw = read_csv(file)
irs_raw = irs_raw%>%select(zipcode, N07240)%>% mutate(zip = as.numeric(zipcode),saverscredit = N07240)%>%select(-zipcode,-N07240) %>% group_by(zip) %>% summarise(saverscredit = sum(saverscredit))%>%ungroup()
irs_clean = irs_raw%>% inner_join(census_step_zip, by="zip") %>% mutate(saversperpop=saverscredit/totalpop)
file = "../data/raw/ZIP-COUNTY-FIPS_2017-06.csv"
key_zip_county = read_csv(file)
key_zip_county = key_zip_county %>% rename(zip=ZIP, county=COUNTYNAME, fips=STCOUNTYFP)%>% mutate(zip=as.numeric(zip)) %>% select(zip, county,fips)
irs_joined = key_zip_county%>%inner_join(irs_clean, by="zip")
irs_final = irs_joined%>%group_by(fips)%>% summarise(saversperpop = mean(saversperpop)) %>% ungroup() %>% mutate(fips=as.numeric(fips))
merge8=merge7 %>%inner_join(irs_final,by="fips") %>% drop_na()
write.csv("MBDS/471/final-project-template/data/clean/merge8.csv")
write_csv("MBDS/471/final-project-template/data/clean/merge8.csv")
write.csv2("MBDS/471/final-project-template/data/clean/merge8.csv")
write.csv2("merge8.csv")
write.csv2(merge8, "MBDS/471/final-project-template/data/clean/merge8.csv")
write.csv(merge8, "MBDS/471/final-project-template/data/clean/merge8.csv")
?write.csv
write.csv(merge8, file = "MBDS/471/final-project-template/data/clean/merge8.csv")
write.csv(merge8, file = "MBDS/471/final-project-template/data/clean/merge8.csv")
write.csv(merge8, file = "MBDS/471/final-project-template/data/clean")
write.csv(merge8, file = "MBDS\471\final-project-template\data\clean\\merge8.csv")
write.csv(merge8, file = "MBDS/471/final-project-template/data/clean/merge8.csv")
write.csv(merge8, file = 'MBDS/471/final-project-template/data/clean/merge8.csv')
write.csv(merge8, file = 'merge8.csv')
write.csv(merge8, file = '../data/clean/merge8.csv')
knitr::opts_chunk$set(echo = TRUE)
merge8 = read_csv("../data/clean/merge8.csv")
url = "https://raw.githubusercontent.com/themarshallproject/incarceration-census/main/census_incarceration.csv"
incar_raw = read_csv(url) %>% select(FIPS, state, county, total_population_20, incarcerated_20)%>%
mutate(incar_rate = incarcerated_20/total_population_20) %>%
select(incar_rate, FIPS) %>% rename(fips = FIPS) %>% ungroup()
incarvars = merge8 %>% inner_join(incar_raw, by = "fips") %>% select(-totalpop) %>% drop_na() %>% as.data.frame()
incar_0 = incarvars %>% filter(incar_rate == 0)
incar_complete = incarvars %>% filter(!(incar_rate == 0)) %>% drop_na()
incar_0rf = incar_0 %>% select(-fips, -county, -state)
incar_completerf = incar_complete %>% as.data.frame() %>% select(-fips, -county, -state)
train_samples = sample(1:nrow(incar_completerf), round(0.8*nrow(incar_completerf)))
incar_train = incar_completerf %>% filter(row_number() %in% train_samples)
incar_test = incar_completerf %>% filter(!(row_number() %in% train_samples))
rf_fit = randomForest(incar_rate ~ ., data = incar_train)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(lubridate)
library(tidyverse)
library(ggplot2)
library(readr)
library(readxl)
library(usdata)
library(tm)
library(stringr)
library(randomForest)
knitr::opts_chunk$set(echo = TRUE)
merge8 = read_csv("../data/clean/merge8.csv")
url = "https://raw.githubusercontent.com/themarshallproject/incarceration-census/main/census_incarceration.csv"
incar_raw = read_csv(url) %>% select(FIPS, state, county, total_population_20, incarcerated_20)%>%
mutate(incar_rate = incarcerated_20/total_population_20) %>%
select(incar_rate, FIPS) %>% rename(fips = FIPS) %>% ungroup()
incarvars = merge8 %>% inner_join(incar_raw, by = "fips") %>% select(-totalpop) %>% drop_na() %>% as.data.frame()
incar_0 = incarvars %>% filter(incar_rate == 0)
incar_complete = incarvars %>% filter(!(incar_rate == 0)) %>% drop_na()
incar_0rf = incar_0 %>% select(-fips, -county, -state)
incar_completerf = incar_complete %>% as.data.frame() %>% select(-fips, -county, -state)
train_samples = sample(1:nrow(incar_completerf), round(0.8*nrow(incar_completerf)))
incar_train = incar_completerf %>% filter(row_number() %in% train_samples)
incar_test = incar_completerf %>% filter(!(row_number() %in% train_samples))
rf_fit = randomForest(incar_rate ~ ., data = incar_train)
rf_predictions = predict(rf_fit, newdata = incar_test)
mean((rf_predictions - incar_test$incar_rate)^2)
rf_fit2 = randomForest(incar_rate ~ ., data = incar_completerf)
rf_predictions2 = predict(rf_fit2, newdata = incar_0rf)
incar_predicted = incar_0
incar_predicted$incar_rate = rf_predictions2
incar_final = rbind(incar_predicted, incar_complete) %>% drop_na() %>% select(fips, incar_rate)
write.csv(incar_final, file = '../data/clean/merge9incar.csv')
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(lubridate)
library(tidyverse)
library(ggplot2)
library(readr)
library(readxl)
library(usdata)
library(tm)
library(stringr)
election = read_csv("../data/clean/merge9incar")
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(lubridate)
library(tidyverse)
library(ggplot2)
library(readr)
library(readxl)
library(usdata)
library(tm)
library(stringr)
merge9incar = read_csv("../data/clean/merge9incar.csv")
hope = read.csv("https://raw.githubusercontent.com/grammakov/USA-cities-and-states/master/us_cities_states_counties.csv", sep = "|") %>% rename(State = State.full)
hope = hope %>% select(-City.alias)
countycrime = read_xlsx("../data/raw/countycrime.xlsx") %>% select(State, County, Total_Theft)
citycrime = read_xlsx("../data/raw/citycrime.xlsx")
citycrime$State = removeNumbers(citycrime$State)
citycrime$City = removeNumbers(citycrime$City)
countycrime$State = removeNumbers(countycrime$State)
countycrime$County = removeNumbers(countycrime$County)
countycrime$county_words = sapply(gregexpr("\\S+", countycrime$County), length)
stopwords = c(" County Police Department", " County Unified Police Department", " Public Safety")
countycrime$County = removeWords(countycrime$County, stopwords)
countycrime = countycrime %>% group_by(County, State) %>% summarise(Total_Theft = sum(Total_Theft)) %>% ungroup()
citycrimecounty = hope %>% inner_join(citycrime, by = c("State", "City")) %>% distinct()
citycrimecounty$County = tolower(citycrimecounty$County)
citycrimecounty$County = str_to_title(citycrimecounty$County)
citiestocounties = citycrimecounty %>% group_by(County, State) %>% summarise(Total_Thefts = sum(Total_Thefts))
citiestocounties$County_State = paste(citiestocounties$County, citiestocounties$State)
countycrime$County_State = paste(countycrime$County, countycrime$State)
missingcounties = citiestocounties %>% filter(!(County_State %in% countycrime$County_State))  %>% rename(Total_Theft = Total_Thefts)
response = rbind(missingcounties, countycrime) %>% drop_na() %>% rename(county = County, state = State)
merge_with_response = merge9incar %>% inner_join(response, by = c("state", "county"))
View(merge9incar)
View(merge8)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(lubridate)
library(tidyverse)
library(ggplot2)
library(readr)
library(tidycensus)
library(readxl)
library(usdata)
library(tm)
library(stringr)
merge8=merge7 %>%inner_join(irs_final,by="fips") %>% drop_na()
View(merge8)
?write.csv()
write.csv(merge8, file = '../data/clean/merge8.csv' , row.names = FALSE)
write.csv(merge8, file = '../data/clean/merge8.csv', row.names = FALSE)
?load_variables
library(tidycensus)
?load_variables
var <- load_variables(2019, "acs1", cache = TRUE)
var
View(var)
View(var)
View(var)
View(var)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(lubridate)
library(tidyverse)
library(ggplot2)
library(readr)
library(tidycensus)
library(readxl)
library(usdata)
library(tm)
library(stringr)
var <- load_variables(2019, "acs1", cache = TRUE)
census_data <- get_acs(geography = "county", variables = c(med_age = "B01002_001",
permale = "B01001_002",
bachplus = "B16010_041",
totalpop = "B01003_001",
unemployed = "B27011_008",
employed =	"B27011_003",
foodstamp = "B09010_002",
ilefnhi= "B27011_007",
ilufnhi= "B27011_012",
nilfnhi = "B27011_017",
gini = "B19083_001",
med_income = "B19013_001",
med_2bed = "B25031_004",
single_mom = "B11012_010",
lessthan_hs = "B16010_002",
housing_units = "B25001_001",
housholds = "B11001_002",
inschool = "B14001_002",
publicschool = "C14003_002",
privateschool = "C14003_011",
ingradprofesh = "B14001_009",
inundergrad = "B14001_008",
Marriedcouplefamily = "B11001_003",
withkids = "B23009_002",
singledad = "B19131_039",
divorced = "B07008_004",
widowed = "C07008_005",
nevermarried = "B26104_002",
under5dispov = "B18130_004",
under5disnopov = "B18130_005",
dis5to17pov = "B18130_011",
dis5to17nopov = "B18130_012",
dis18to34pov = "B18130_018",
dis18to34nopov = "B18130_019",
dis35to64pov = "B18130_025",
dis35to64nopov = "B18130_026",
foreignborn = "B99051_005",
fromdifstate = "B07001_065",
fromabroad = "B07001_081",
year = 2019))
1+1
?Hmisc
library(Hmisc)
install.packages("Hmisc")
library(Hmisc)
install.packages("corrplot")
library(Hmisc)
library(corrplot)
library(dplyr)
theft_train = read.csv('../data/clean/theft_train.csv')
theft_train_cor = theft_train %>% select(-state, -county, -fips)
res = rcorr(as.matrix(theft_train_cor))
getwd()
setwd("~/MBDS/471/final-project-template/code")
theft_train = read.csv('../data/clean/theft_train.csv')
theft_train_cor = theft_train %>% select(-state, -county, -fips)
res = rcorr(as.matrix(theft_train_cor))
corrplot(res$r, type="upper", order="hclust",
p.mat = res2$P, sig.level = 0.01, insig = "blank")
corrplot(res$r, type="upper", order="hclust",
p.mat = res$P, sig.level = 0.01, insig = "blank")
corrplot(res$r, type="upper", order="hclust",
p.mat = res$P, sig.level = 0.01, insig = "blank", number.cex=0.75)
corrplot(res$r, type="upper", order="hclust",
p.mat = res$P, sig.level = 0.01, insig = "blank", number.cex=0.5)
corrplot(res$r, type="upper", order="hclust",
p.mat = res$P, sig.level = 0.01, insig = "blank", cl.cex=0.5)
theft_train = read.csv('../data/clean/theft_train.csv')
theft_train_cor = theft_train %>% select(-state, -county, -fips)
res = rcorr(as.matrix(theft_train_cor))
corrplot(res$r, type="upper", order="hclust",
p.mat = res$P, sig.level = 0.01, insig = "blank", cl.cex=0.5)
corrplot(res$r, type="upper", order="hclust",
p.mat = res$P, sig.level = 0.01, insig = "blank")
corrplot(res$r, type="upper", order="hclust",
p.mat = res$P, sig.level = 0.01, insig = "blank")
corrplot(res$r, type="upper", order="hclust",
p.mat = res$P, sig.level = 0.01, insig = "blank", cex.var = 1)
corrplot(res$r, type="upper", order="hclust",
p.mat = res$P, sig.level = 0.01, insig = "blank", n.col.legend=5, cex.col=0.7,
cex.var=0.9)
corrplot(res$r, type="upper", order="hclust",
p.mat = res$P, sig.level = 0.01, insig = "blank", tl.cex = 1)
corrplot(res$r, type="upper", order="hclust",
p.mat = res$P, sig.level = 0.01, insig = "blank", tl.cex = 1)
corrplot(res$r)
corrplot(res$r, type="upper", order="hclust",
sig.level = 0.01, insig = "blank", tl.cex = 1)
corrplot(res$r, type="upper", order="hclust",
sig.level = 0.01, insig = "blank", tl.cex = .5)
corrplot(res$r, type="upper", order="hclust",
p.mat = res$P, sig.level = 0.01, insig = "blank", tl.cex = .5)
res<-rcorr(theft_train_cor)
flattenCorrMatrix(res$r, res$P)
corrplot(res$r, type="upper", order="hclust",
p.mat = res$P, sig.level = 0.01, insig = "blank", tl.cex = .5)
res<-rcorr(as.matrix(theft_train_cor))
flattenCorrMatrix(res$r, res$P)
corrplot(res$r, type="upper", order="hclust",
p.mat = res$P, sig.level = 0.01, insig = "blank", tl.cex = .5)
res<-rcorr(as.matrix(theft_train_cor))
flattenCorrMatrix(res$r, res$P)
library(Hmisc)
library(corrplot)
library(dplyr)
flattenCorrMatrix <- function(cormat, pmat) {
ut <- upper.tri(cormat)
data.frame(
row = rownames(cormat)[row(cormat)[ut]],
column = rownames(cormat)[col(cormat)[ut]],
cor  =(cormat)[ut],
p = pmat[ut]
)
}
res<-rcorr(as.matrix(theft_train_cor))
flattenCorrMatrix(res$r, res$P)
corrplot(res$r, type="upper", order="hclust",
p.mat = res$P, sig.level = 0.01, insig = "blank", tl.cex = .5)
flattenCorrMatrix <- function(cormat, pmat) {
ut <- upper.tri(cormat)
data.frame(
row = rownames(cormat)[row(cormat)[ut]],
column = rownames(cormat)[col(cormat)[ut]],
cor  =(cormat)[ut],
p = pmat[ut]
)
}
res<-rcorr(as.matrix(theft_train_cor))
flattenCorrMatrix(res$r, res$P)
res<-rcorr(as.matrix(theft_train_cor))
flattenCorrMatrix(res$r, res$P)
corrplot(res$r, type="upper", order="hclust",
insig = "blank", tl.cex = .5)
corrplot(res$r, type="upper", order="hclust",
tl.cex = .5)
corrplot(res$r, type="lower", order="hclust",
tl.cex = .5)
install.packages("reshape2")
library(reshape2)
cormat <- round(cor(theft_train_cor),3)
cormat
install.packages("ggcorrplot")
library(ggcorrplot)
ggcorrplot(cormat, method = "circle")
ggcorrplot(cormat, method = "circle", type = "lower")
?ggcorplot
?ggcorrplot
ggcorrplot(cormat, method = "circle", type = "lower", tl.cex = .5)
ggcorrplot(cormat, method = "circle", type = "lower", tl.cex = 1)
ggcorrplot(cormat, method = "circle", type = "lower", tl.cex = 10)
library(ggplot2)
cors(theft_train_cor) %>%
map(~rownames_to_column(.x, var="measure1")) %>%
# look at the first element of the list (r)
first() %>%
head()
install.packages("purrr")
cors(theft_train_cor) %>%
map(~rownames_to_column(.x, var="measure1")) %>%
# look at the first element of the list (r)
first() %>%
head()
library(purrr)
cors(theft_train_cor) %>%
map(~rownames_to_column(.x, var="measure1")) %>%
# look at the first element of the list (r)
first() %>%
head()
cors <- function(df) {
M <- Hmisc::rcorr(as.matrix(df))
# turn all three matrices (r, n, and P into a data frame)
Mdf <- map(M, ~data.frame(.x))
# return the three data frames in a list
return(Mdf)
}
cors(theft_train_cor) %>%
map(~rownames_to_column(.x, var="measure1")) %>%
# look at the first element of the list (r)
first() %>%
head()
view(colnames(theft_train)
