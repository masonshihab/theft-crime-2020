library(rpart.plot)    # to plot decision trees
library(randomForest)  # random forests
library(gbm)           # boosting
library(tidyverse)     # tidyverse
library(kableExtra)    # for printing tables
library(cowplot)       # for side by side plots
theftdata=read_csv("../data/clean/dataclean.csv")
set.seed(471) # set seed for reproducibility
train_samples = sample(1:nrow(theftdata), round(0.8*nrow(theftdata)))
theft_train = theftdata %>% filter(row_number() %in% train_samples) %>% select(-county,-state)
theft_test = theftdata %>% filter(!(row_number() %in% train_samples))%>% select(-county,-state)
set.seed(471) # set seed for reproducibility
mvalues = seq(3,15, by = 1)
oob_errors = numeric(length(mvalues))
ntree = 500
for(idx in 1:length(mvalues)){
m = mvalues[idx]
rf_fit = randomForest(theftrate ~ ., mtry = m, data = theft_train)
oob_errors[idx] = rf_fit$mse[ntree]
}
tibble(m = mvalues, oob_err = oob_errors) %>%
ggplot(aes(x = m, y = oob_err)) +
geom_line() + geom_point() +
scale_x_continuous(breaks = mvalues) +
theme_bw()
set.seed(471) # set seed for reproducibility
rf_6 = randomForest(theftrate ~ ., mtry = 6, data = theft_train)
rf_6$importance
varImpPlot(rf_6,n.var = 10)
library(tidyverse)
library(glmnetUtils)
source("/code/functions/plot_glmnet.R")
source("../code/functions/plot_glmnet.R")
View(theftdata)
options(scipen = 0, digits = 3)  # controls number of significant digits printed
library(rpart)         # to train decision trees
library(rpart.plot)    # to plot decision trees
library(randomForest)  # random forests
library(gbm)           # boosting
library(tidyverse)     # tidyverse
library(kableExtra)    # for printing tables
library(cowplot)       # for side by side plots
theftdata=read_csv("../data/clean/dataclean.csv")
set.seed(471) # set seed for reproducibility
train_samples = sample(1:nrow(theftdata), round(0.8*nrow(theftdata)))
theft_train = theftdata %>% filter(row_number() %in% train_samples) %>% select(-county,-state)
theft_test = theftdata %>% filter(!(row_number() %in% train_samples))%>% select(-county,-state)
set.seed(471) # set seed for reproducibility
mvalues = seq(3,15, by = 1)
oob_errors = numeric(length(mvalues))
ntree = 500
for(idx in 1:length(mvalues)){
m = mvalues[idx]
rf_fit = randomForest(theftrate ~ -fips ., mtry = m, data = theft_train)
options(scipen = 0, digits = 3)  # controls number of significant digits printed
library(rpart)         # to train decision trees
library(rpart.plot)    # to plot decision trees
library(randomForest)  # random forests
library(gbm)           # boosting
library(tidyverse)     # tidyverse
library(kableExtra)    # for printing tables
library(cowplot)       # for side by side plots
theftdata=read_csv("../data/clean/dataclean.csv")
set.seed(471) # set seed for reproducibility
train_samples = sample(1:nrow(theftdata), round(0.8*nrow(theftdata)))
theft_train = theftdata %>% filter(row_number() %in% train_samples) %>% select(-county,-state)
theft_test = theftdata %>% filter(!(row_number() %in% train_samples))%>% select(-county,-state)
set.seed(471) # set seed for reproducibility
mvalues = seq(3,15, by = 1)
oob_errors = numeric(length(mvalues))
ntree = 500
for(idx in 1:length(mvalues)){
m = mvalues[idx]
rf_fit = randomForest(theftrate ~. -fips, mtry = m, data = theft_train)
oob_errors[idx] = rf_fit$mse[ntree]
}
tibble(m = mvalues, oob_err = oob_errors) %>%
ggplot(aes(x = m, y = oob_err)) +
geom_line() + geom_point() +
scale_x_continuous(breaks = mvalues) +
theme_bw()
set.seed(471) # set seed for reproducibility
rf_6 = randomForest(theftrate ~ .-fips, mtry = 6, data = theft_train)
rf_6$importance
varImpPlot(rf_6,n.var = 10)
set.seed(471) # set seed for reproducibility
rf_6 = randomForest(theftrate ~ .-fips, mtry = 4, data = theft_train)
rf_6$importance
varImpPlot(rf_6,n.var = 10)
library(tidyverse)
library(glmnetUtils)
source("../code/functions/plot_glmnet.R")
theftdata=read_csv("../data/clean/dataclean.csv")
set.seed(471) # set seed for reproducibility
train_samples = sample(1:nrow(theftdata), round(0.8*nrow(theftdata)))
theft_train = theftdata %>% filter(row_number() %in% train_samples) %>% select(-county,-state)
theft_test = theftdata %>% filter(!(row_number() %in% train_samples))%>% select(-county,-state)
set.seed(471) # set seed for reproducibility
ridge_fit = cv.glmnet(theftrate ~ .-fips,  # formula notation, as usual
alpha = 0,                 # alpha = 0 for ridge
nfolds = 10,               # number of folds
data = theft_train)   # data to run ridge on
plot(ridge_fit)
plot_glmnet(ridge_fit, crime_data_train, features_to_plot = 10)
plot_glmnet(ridge_fit, theft_train, features_to_plot = 10)
plot_glmnet(ridge_fit, theft_train, features_to_plot = 7)
plot_glmnet(ridge_fit, theft_train, features_to_plot = 8)
getwd()
setwd("/Users/diyangchu/Documents/2-grad@Penn/STAT471/theft-crime-2020")
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(lubridate)
library(tidyverse)
library(ggplot2)
library(readr)
library(readxl)
library(usdata)
library(tm)
library(stringr)
library(kableExtra)
theft_train=read_csv("../data/clean/theft_train.csv")
theft_train=read_csv("../data/clean/theft_train.csv")
theft_train %>% select(-fips, -state, -county) %>%
ggplot(aes(x = theftrate)) +
geom_histogram()+
theme_bw()+
scale_y_log10()
theft_train %>% select(-fips, -state, -county) %>%
ggplot(aes(x = theftrate)) +
geom_histogram()+
labs(x = "Count",
y = "Theft Rate")+
theme_bw()+
scale_y_log10()
theft_train %>% select(-fips, -state, -county) %>%
ggplot(aes(x = theftrate)) +
geom_histogram()+
labs(y = "Count",
x = "Theft Rate")+
theme_bw()+
scale_y_log10()
theft_train %>% select(-fips, -state, -county) %>%
ggplot(aes(y=theftrate)) +
geom_boxplot()+
theme_bw()
theft_train %>% select(-fips, -state, -county) %>%
ggplot(aes(y=theftrate)) +
geom_boxplot()+
labs(x = "Theft Rate",
title = "Boxplot of Theft Rate")+
theme_bw()
theft_train %>% select(-fips, -state, -county) %>%
ggplot(aes(y=theftrate)) +
geom_boxplot()+
labs(y = "Theft Rate",
title = "Boxplot of Theft Rate")+
theme_bw()
# plot theftrate against poor_fair_health
p1 = theft_train %>% select(-fips, -state, -county) %>%
ggplot(aes(x = poor_fair_health, y = theftrate)) +
geom_point() +
scale_x_log10() +
scale_y_log10() +
geom_smooth(method = "lm", formula = "y~x", se = FALSE) +
labs(x = "Percent adults reporting poor or fair health",
y = "Theft Rate",
title = "Percentage of Adults Reporting Fair or Poor Health") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5))
p1
theft_train %>% arrange(desc(poor_fair_health))%>%head(5)
# plot theftrate against housing_density
p2 = theft_train %>% select(-fips, -state, -county)%>%
ggplot(aes(x = housing_density, y = theftrate)) +
geom_point() +
scale_x_log10() +
scale_y_log10() +
geom_smooth(method = "lm", formula = "y~x", se = FALSE) +
labs(x = "Housing Density",
y = "Theft Rate",
title = "Housing Density") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5))
p2
theft_train %>% arrange(desc(housing_density))%>%head(5)
# plot theftrate against pertrump
p4 = theft_train %>% select(-fips, -state, -county)%>%
ggplot(aes(x = pertrump, y = theftrate)) +
geom_point() +
scale_x_log10() +
scale_y_log10() +
geom_smooth(method = "lm", formula = "y~x", se = FALSE) +
labs(x = "Percent of Trump Supporters",
y = "Theft Rate",
title = "Percent of Trump Supporters (in 2020) vs Theft Rate") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5))
p4
# plot theftrate against PctEmpFIRE
p5 = theft_train %>% select(-fips, -state, -county)%>%
ggplot(aes(x = PctEmpFIRE, y = theftrate)) +
geom_point() +
scale_x_log10() +
scale_y_log10() +
geom_smooth(method = "lm", formula = "y~x", se = FALSE) +
labs(x = "Percent of People Employed in FIRE",
y = "Theft Rate",
title = "Percent of People Employed in Finance, Insurance, and Real Estate (FIRE) vs Theft Rate") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5))
p5
# plot theftrate against PctEmpFIRE
p5 = theft_train %>% select(-fips, -state, -county)%>%
ggplot(aes(x = PctEmpFIRE, y = theftrate)) +
geom_point() +
scale_x_log10() +
scale_y_log10() +
geom_smooth(method = "lm", formula = "y~x", se = FALSE) +
labs(x = "Percent of People Employed in FIRE",
y = "Theft Rate",
title = "Percent of People Employed in Finance/Insurance,/Real Estate (FIRE) vs Theft Rate") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5))
p5
# plot theftrate against PctEmpFIRE
p5 = theft_train %>% select(-fips, -state, -county)%>%
ggplot(aes(x = PctEmpFIRE, y = theftrate)) +
geom_point() +
scale_x_log10() +
scale_y_log10() +
geom_smooth(method = "lm", formula = "y~x", se = FALSE) +
labs(x = "Percent of People Employed in FIRE",
y = "Theft Rate",
title = "Percent of People Employed in Finance/Insurance/Real Estate(FIRE) vs Theft Rate") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5))
p5
# plot theftrate against PctEmpFIRE
p5 = theft_train %>% select(-fips, -state, -county)%>%
ggplot(aes(x = PctEmpFIRE, y = theftrate)) +
geom_point() +
scale_x_log10() +
scale_y_log10() +
geom_smooth(method = "lm", formula = "y~x", se = FALSE) +
labs(x = "Percent of People Employed in FIRE",
y = "Theft Rate",
title = "Percent of People Employed in \n
Finance/Insurance/Real Estate(FIRE) vs Theft Rate") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5))
p5
# plot theftrate against poor_fair_health
p1 = theft_train %>% select(-fips, -state, -county) %>%
ggplot(aes(x = poor_fair_health, y = theftrate)) +
geom_point() +
scale_x_log10() +
scale_y_log10() +
geom_smooth(method = "lm", formula = "y~x", se = FALSE) +
labs(x = "Percent adults reporting poor or fair health",
y = "Theft Rate",
title = "Percentage of Adults Reporting\n
Fair or Poor Health vs Theft Rate") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5))
p1
# plot theftrate against poor_fair_health
p1 = theft_train %>% select(-fips, -state, -county) %>%
ggplot(aes(x = poor_fair_health, y = theftrate)) +
geom_point() +
scale_x_log10() +
scale_y_log10() +
geom_smooth(method = "lm", formula = "y~x", se = FALSE) +
labs(x = "Percent adults reporting poor or fair health",
y = "Theft Rate",
title = "Percentage of Adults Reporting\n Fair or Poor Health vs Theft Rate") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5))
p1
# plot theftrate against PctEmpFIRE
p5 = theft_train %>% select(-fips, -state, -county)%>%
ggplot(aes(x = PctEmpFIRE, y = theftrate)) +
geom_point() +
scale_x_log10() +
scale_y_log10() +
geom_smooth(method = "lm", formula = "y~x", se = FALSE) +
labs(x = "Percent of People Employed in FIRE",
y = "Theft Rate",
title = "Percent of People Employed in \n Finance/Insurance/Real Estate(FIRE) vs Theft Rate") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5))
p5
View(theft_train)
# plot theftrate against unemp_bens_possible
p7 = theft_train %>% select(-fips, -state, -county)%>%
ggplot(aes(x = unemp_bens_possible, y = theftrate)) +
geom_point() +
scale_x_log10() +
scale_y_log10() +
geom_smooth(method = "lm", formula = "y~x", se = FALSE) +
labs(x = "State unemployment insurance",
y = "Theft Rate",
title = "State Unemployment Insurance vs Theft Rate") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5))
# plot theftrate against unemp_bens_possible
p7 = theft_train %>% select(-fips, -state, -county)%>%
ggplot(aes(x = unemp_bens_possible, y = theftrate)) +
geom_point() +
scale_x_log10() +
scale_y_log10() +
geom_smooth(method = "lm", formula = "y~x", se = FALSE) +
labs(x = "State unemployment insurance",
y = "Theft Rate",
title = "State Unemployment Insurance vs Theft Rate") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5))
p7
# plot theftrate against unemp_bens_possible
p7 = theft_train %>% select(-fips, -state, -county)%>%
ggplot(aes(x = unemp_bens_possible, y = theftrate)) +
geom_point() +
scale_x_log10() +
scale_y_log10() +
geom_smooth(method = "lm", formula = "y~x", se = FALSE) +
labs(x = "State unemployment insurance",
y = "Theft Rate",
title = "State Unemployment Insurance vs Theft Rate") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5))
# plot theftrate against lessthan_hs
p8= theft_train %>% select(-fips, -state, -county)%>%
ggplot(aes(x = lessthan_hs, y = theftrate)) +
geom_point() +
scale_x_log10() +
scale_y_log10() +
geom_smooth(method = "lm", formula = "y~x", se = FALSE) +
labs(x = "Percent with less than HS education",
y = "Theft Rate",
title = "Percent with Less than High School\n Education vs Theft Rate") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5))
p8
# plot theftrate against lessthan_hs
p8= theft_train %>% select(-fips, -state, -county)%>%
ggplot(aes(x = lessthan_hs, y = theftrate)) +
geom_point() +
scale_x_log10() +
scale_y_log10() +
geom_smooth(method = "lm", formula = "y~x", se = FALSE) +
labs(x = "Percent with less than HS education",
y = "Theft Rate",
title = "Percent of people with Less than High School\n Education vs Theft Rate") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5))
p8
# plot theftrate against PctEmpConstruction
p9= theft_train %>% select(-fips, -state, -county)%>%
ggplot(aes(x = PctEmpConstruction, y = theftrate)) +
geom_point() +
scale_x_log10() +
scale_y_log10() +
geom_smooth(method = "lm", formula = "y~x", se = FALSE) +
labs(x = "PPercent employed in construction",
y = "Theft Rate",
title = "Percent of People Employed in Construction") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5))
p9
# plot theftrate against PctEmpConstruction
p9= theft_train %>% select(-fips, -state, -county)%>%
ggplot(aes(x = PctEmpConstruction, y = theftrate)) +
geom_point() +
scale_x_log10() +
scale_y_log10() +
geom_smooth(method = "lm", formula = "y~x", se = FALSE) +
labs(x = "Percent employed in construction",
y = "Theft Rate",
title = "Percent of People Employed in Construction") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5))
p9
# plot theftrate against poor_fair_health
p1 = theft_train %>% select(-fips, -state, -county) %>%
ggplot(aes(x = poor_fair_health, y = theftrate, alpha = 0.8)) +
geom_point() +
scale_x_log10() +
scale_y_log10() +
geom_smooth(method = "lm", formula = "y~x", se = FALSE) +
labs(x = "Percent adults reporting poor or fair health",
y = "Theft Rate",
title = "Percentage of Adults Reporting\n Fair or Poor Health vs Theft Rate") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5))
p1
# plot theftrate against poor_fair_health
p1 = theft_train %>% select(-fips, -state, -county) %>%
ggplot(aes(x = poor_fair_health, y = theftrate, alpha = 0.7)) +
geom_point() +
scale_x_log10() +
scale_y_log10() +
geom_smooth(method = "lm", formula = "y~x", se = FALSE) +
labs(x = "Percent adults reporting poor or fair health",
y = "Theft Rate",
title = "Percentage of Adults Reporting\n Fair or Poor Health vs Theft Rate") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5))
p1
# plot theftrate against poor_fair_health
p1 = theft_train %>% select(-fips, -state, -county) %>%
ggplot(aes(x = poor_fair_health, y = theftrate)) +
geom_point(aes(alpha = 0.7)) +
scale_x_log10() +
scale_y_log10() +
geom_smooth(method = "lm", formula = "y~x", se = FALSE) +
labs(x = "Percent adults reporting poor or fair health",
y = "Theft Rate",
title = "Percentage of Adults Reporting\n Fair or Poor Health vs Theft Rate") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5))
p1
# plot theftrate against poor_fair_health
p1 = theft_train %>% select(-fips, -state, -county) %>%
ggplot(aes(x = poor_fair_health, y = theftrate)) +
geom_point(alpha = 0.7) +
scale_x_log10() +
scale_y_log10() +
geom_smooth(method = "lm", formula = "y~x", se = FALSE) +
labs(x = "Percent adults reporting poor or fair health",
y = "Theft Rate",
title = "Percentage of Adults Reporting\n Fair or Poor Health vs Theft Rate") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5))
p1
# plot theftrate against poor_fair_health
p1 = theft_train %>% select(-fips, -state, -county) %>%
ggplot(aes(x = poor_fair_health, y = theftrate)) +
geom_point(alpha = 0.6) +
scale_x_log10() +
scale_y_log10() +
geom_smooth(method = "lm", formula = "y~x", se = FALSE) +
labs(x = "Percent adults reporting poor or fair health",
y = "Theft Rate",
title = "Percentage of Adults Reporting\n Fair or Poor Health vs Theft Rate") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5))
p1
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(lubridate)
library(tidyverse)
library(ggplot2)
library(readr)
library(readxl)
library(usdata)
library(tm)
library(stringr)
library(kableExtra)
theft_train=read_csv("../data/clean/theft_train.csv")
theft_train %>% select(-fips, -state, -county) %>%
ggplot(aes(x = theftrate)) +
geom_histogram()+
labs(y = "Count",
x = "Theft Rate",
title = "Histogram of Theft Rate")+
theme_bw()+
scale_y_log10()
theft_train %>% select(-fips, -state, -county) %>%
ggplot(aes(y=theftrate)) +
geom_boxplot()+
labs(y = "Theft Rate",
title = "Boxplot of Theft Rate")+
theme_bw()
theft_train %>% select(state,county,theftrate) %>% arrange(desc(theftrate)) %>% head(10)
View(theft_train)
install.packages("corrplot")
library(corrplot)
theft_train=read_csv("../data/clean/theft_train.csv")
theft_train=read_csv("/data/clean/theft_train.csv")
theft_train=read_csv("../data/clean/theft_train.csv")
theft_train=read_csv("/Users/diyangchu/Documents/2-grad@Penn/STAT471/theft-crime-2020/data/clean/theft_train.csv")
theft_train=read_csv("/Users/diyangchu/Documents/2-grad@Penn/STAT471/theft-crime-2020/data/clean/theft_train.csv")
M = cor(theft_train)
theft_train=read_csv("/Users/diyangchu/Documents/2-grad@Penn/STAT471/theft-crime-2020/data/clean/theft_train.csv")
theft_train%>% select(-fips, -state, -county)
theft_train = theft_train%>% select(-fips, -state, -county)
M = cor(theft_train)
corrplot(M, method = 'square', diag = FALSE, order = 'hclust',
addrect = 3, rect.col = 'blue', rect.lwd = 3, tl.pos = 'd')
corrplot(M, method = 'square', diag = FALSE, order = 'hclust',tl.cex = 0.5,
addrect = 3, rect.col = 'blue', rect.lwd = 3, tl.pos = 'd')
corrplot(M, method = 'square', diag = FALSE, order = 'hclust',tl.cex = 0.5,
addrect = 6, rect.col = 'blue', rect.lwd = 3, tl.pos = 'd')
corrplot(M, method = 'square', diag = FALSE, order = 'hclust',tl.cex = 0.4,
addrect = 6, rect.col = 'blue', rect.lwd = 3, tl.pos = 'd')
corrplot(M, method = 'square', diag = FALSE, order = 'hclust',tl.cex = 0.4,
addrect = 2, rect.col = 'blue', rect.lwd = 3, tl.pos = 'd')
corrplot(M, method = 'square', diag = FALSE, order = 'hclust',tl.cex = 0.4,
addrect = 9, rect.col = 'blue', rect.lwd = 3, tl.pos = 'd')
corrplot(M, method = 'square', diag = FALSE, order = 'hclust',tl.cex = 0.4,
addrect = 6, rect.col = 'blue', rect.lwd = 3, tl.pos = 'd')
corrplot(M, method = 'square', diag = FALSE, order = 'hclust',tl.cex = 0.4,
addrect = 3, rect.col = 'blue', rect.lwd = 3, tl.pos = 'd')
corrplot(M, order = 'hclust', addrect = 2,tl.cex = 0.4)
corrplot(M, method = 'circle', order = 'hclust', addrect = 2,tl.cex = 0.4)
corrplot(M, type = 'lower', order = 'hclust', tl.col = 'black',
cl.ratio = 0.2, tl.srt = 45, col = COL2('PuOr', 10))
corrplot(M, type = 'lower', order = 'hclust', tl.col = 'black',
cl.ratio = 0.2, tl.srt = 45, col = COL2('PuOr', 10), tl.cex = 0.4)
corrplot(M,  order = 'hclust', tl.col = 'black',
cl.ratio = 0.2, tl.srt = 45, col = COL2('PuOr', 10), tl.cex = 0.4)
corrplot(M, type = 'lower', order = 'hclust', tl.col = 'black',
cl.ratio = 0.2, tl.srt = 45, col = COL2('PuOr', 10), tl.cex = 0.4)
